name: Deploy Cloud Functions

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (dev, staging, prod)'
        required: true
        type: string
    secrets:
      gcp_sa_key:
        description: 'GCP service account key JSON'
        required: true

jobs:
  deploy-cloud-functions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authenticate to Google Cloud
        run: |
          echo '${{ secrets.gcp_sa_key }}' > ${HOME}/gcp-key.json
          gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
          gcloud config set project ${{ vars.GCP_PROJECT_ID }}
          rm ${HOME}/gcp-key.json

      - name: Deploy Model Registry Cloud Function
        working-directory: cloud_funcs/model_registry
        run: |
          gcloud functions deploy model-registry-${{ inputs.environment }} \
            --gen2 \
            --runtime=python312 \
            --region=${{ vars.GCP_REGION }} \
            --source=. \
            --entry-point=register_model \
            --trigger-bucket=mlsys-models-${{ inputs.environment }} \
            --service-account=function-model-reg-${{ inputs.environment }}@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars=GCP_PROJECT_ID=${{ vars.GCP_PROJECT_ID }} \
            --max-instances=5 \
            --memory=256MB \
            --timeout=60s

      - name: Verify deployment
        run: |
          echo "Cloud Function deployed successfully to ${{ inputs.environment }}"
          gcloud functions describe model-registry-${{ inputs.environment }} \
            --region=${{ vars.GCP_REGION }} \
            --gen2

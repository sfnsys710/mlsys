name: Docker Build and Push

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (dev, staging, prod)'
        required: true
        type: string
      image_tag:
        description: 'Docker image tag (e.g., git SHA or version)'
        required: true
        type: string
      gcp_region:
        description: 'GCP region'
        required: true
        type: string
      gcp_project_id:
        description: 'GCP project ID'
        required: true
        type: string
    secrets:
      gcp_sa_key:
        description: 'GCP service account key JSON'
        required: true

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authenticate to Google Cloud
        run: |
          echo '${{ secrets.gcp_sa_key }}' > ${HOME}/gcp-key.json
          gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
          gcloud config set project ${{ inputs.gcp_project_id }}
          rm ${HOME}/gcp-key.json

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ inputs.gcp_region }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ inputs.gcp_region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/mlsys-${{ inputs.environment }}/mlsys:${{ inputs.image_tag }} \
            -t ${{ inputs.gcp_region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/mlsys-${{ inputs.environment }}/mlsys:latest \
            .

      - name: Push Docker image
        run: |
          docker push ${{ inputs.gcp_region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/mlsys-${{ inputs.environment }}/mlsys:${{ inputs.image_tag }}
          docker push ${{ inputs.gcp_region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/mlsys-${{ inputs.environment }}/mlsys:latest

      - name: Output image URI
        run: |
          echo "Image URI: ${{ inputs.gcp_region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/mlsys-${{ inputs.environment }}/mlsys:${{ inputs.image_tag }}"

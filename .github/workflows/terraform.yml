name: Terraform Workflow

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (dev, staging, prod)'
        required: true
        type: string
      terraform_action:
        description: 'Terraform action (plan or apply)'
        required: true
        type: string
      gcp_region:
        description: 'GCP region'
        required: true
        type: string
      gcp_project_id:
        description: 'GCP project ID'
        required: true
        type: string
    secrets:
      gcp_sa_key:
        description: 'GCP service account key JSON'
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/envs/${{ inputs.environment }}
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.gcp_sa_key }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Terraform version
        id: tf_version
        run: |
          TF_VERSION=$(cat ../../.terraform-version)
          echo "version=$TF_VERSION" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.tf_version.outputs.version }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        run: |
          terraform init -backend-config="bucket=mlsys-terraform-state-${{ inputs.environment }}"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="project_id=${{ inputs.gcp_project_id }}" \
            -var="region=${{ inputs.gcp_region }}" \
            -out=tfplan

      - name: Terraform Apply
        if: inputs.terraform_action == 'apply'
        run: |
          terraform apply -auto-approve tfplan
